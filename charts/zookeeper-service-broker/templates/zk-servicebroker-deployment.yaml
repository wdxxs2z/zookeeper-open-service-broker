kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        args:
        - --port
        - "8080"
        ports:
        - containerPort: 8080
        readinessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        env:
        - name: spring_profiles_active
          value: "kubernetes"
        - name: spring_config_location
          value: "/deployments/config/application.yml"
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: password
        - name: ZOOKEEPER_AUTH
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: zookeeperAuth
        volumeMounts:
        - name: application-config
          mountPath: "/deployments/config" 
          readOnly: true   
      volumes:
      - name: application-config
        configMap:
          name: {{ template "fullname" . }}
          items:
          - key: application.yml
            path: application.yml